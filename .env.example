# One-Pi Content Pipeline - Environment Variables Example
# Copy this file to .env and fill in your actual values
# See OPERATOR_RUNBOOK.md for detailed setup instructions

# ============================================================================
# INGESTION & DATA SOURCES
# ============================================================================

# YouTube API (for trending video analysis)
# Required for YouTube data ingestion in bin/niche_trends.py
# Get from: https://console.developers.google.com/apis/credentials
YOUTUBE_API_KEY=AIzaSyA...your_youtube_api_key_here
# Alternative name (same key):
GOOGLE_API_KEY=AIzaSyA...your_youtube_api_key_here

# Reddit API (for trending topics from subreddits)
# Get from: https://www.reddit.com/prefs/apps (create "script" app)
REDDIT_CLIENT_ID=your_reddit_client_id_here
REDDIT_CLIENT_SECRET=your_reddit_client_secret_here
REDDIT_USER_AGENT=yt-pipeline/0.1 by your_username
REDDIT_SUBREDDITS=technology,AskReddit,worldnews,science,AskScience

# ============================================================================
# ASSET PROVIDERS (Images & Videos)
# ============================================================================

# Pixabay API (free tier available)
# Get from: https://pixabay.com/api/docs/
PIXABAY_API_KEY=your_pixabay_api_key_here

# Pexels API (free tier available)
# Get from: https://www.pexels.com/api/
PEXELS_API_KEY=your_pexels_api_key_here

# Unsplash API (optional, requires attribution)
# Get from: https://unsplash.com/developers
UNSPLASH_ACCESS_KEY=your_unsplash_access_key_here

# ============================================================================
# AI SERVICES (Optional fallbacks)
# ============================================================================

# OpenAI API (optional fallback for TTS and ASR)
# Required only if openai_enabled: true in config
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-...your_openai_api_key_here

# ============================================================================
# BLOG & PUBLISHING
# ============================================================================

# WordPress Integration
# Configured in conf/blog.yaml, but credentials may be in .env
# Note: Currently using Application Passwords from WordPress config

# Blog Control Flags
# Set to "true", "1", or "yes" to enable dry-run mode
BLOG_DRY_RUN=true

# ============================================================================
# UPLOAD & DISTRIBUTION
# ============================================================================

# YouTube Upload (OAuth-based, configured separately)
# Set to "true", "1", or "yes" to enable dry-run mode
YOUTUBE_UPLOAD_DRY_RUN=true

# Google OAuth Client Secrets (for YouTube uploads)
# Path to your client_secrets.json file from Google Cloud Console
GOOGLE_CLIENT_SECRETS=client_secret_166612263948-6r5tduouvue0dqrgii6g01co22pd0tjs.apps.googleusercontent.com.json

# ============================================================================
# WEB UI & ADMINISTRATION
# ============================================================================

# Web UI Password Protection (optional)
# If set, requires this password for accessing /api/run endpoints
WEB_UI_PASSWORD=your_secure_password_here

# ============================================================================
# DEVELOPMENT & TESTING
# ============================================================================

# Short Run Mode (for testing)
# Set to number of seconds to limit TTS/video generation during development
SHORT_RUN_SECS=0

# ============================================================================
# USAGE NOTES
# ============================================================================

# REQUIRED for basic operation:
# - At least one asset provider (PIXABAY_API_KEY or PEXELS_API_KEY)
# - For YouTube ingestion: YOUTUBE_API_KEY
# - For Reddit ingestion: REDDIT_CLIENT_ID + REDDIT_CLIENT_SECRET

# OPTIONAL (graceful fallbacks):
# - OPENAI_API_KEY (only if openai_enabled: true in config)
# - UNSPLASH_ACCESS_KEY (requires attribution in output)
# - WEB_UI_PASSWORD (only if you want password protection)
# - Reddit credentials (can rely on YouTube + Google Trends only)

# DRY RUN MODES:
# - Set BLOG_DRY_RUN=true to test blog posting without publishing
# - Set YOUTUBE_UPLOAD_DRY_RUN=true to test uploads without publishing
# - Both default to dry-run for safety

# VALIDATION:
# Run 'python bin/check_env.py' to validate your configuration
# Run 'make run-once' to test the full pipeline

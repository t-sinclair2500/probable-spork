# Cursor Prompt Library — Branded Animatics Pipeline
# Generated: 2025-08-12 06:14:35Z UTC

## CONTEXT TO REVIEW (MANDATORY)
- Read repo_audit_probable_spork_v2.md top sections (Orchestrator, Acceptance).
- Open: conf/global.yaml, conf/render.yaml, conf/blog.yaml, conf/brief.yaml (or brief.md front‑matter).
- Inspect: bin/run_pipeline.py, bin/assemble_video.py, existing voice/acceptance steps.
- Use centralized names from sdk: SceneScript, Element, Keyframe, BrandStyle, Beat, Animatic Clip.

## WORKING FRAMEWORK — THINK → PLAN → APPLY → VERIFY
- THINK: Summarize constraints, dependencies, and risks (≤10 bullets). Reference this prompt’s RULES.
- PLAN: List exact files, functions, signatures, schemas; step-by-step edits; rollback.
- APPLY: Implement code, keep diffs small & cohesive; instrument logs.
- VERIFY: Run the Test Criteria commands and paste outputs + a date-stamped changelog at the bottom of the file.

ROLE: Systems integrator (must run first).

GOAL
- Establish a single source of truth for types, constants, paths, naming.
- All modules import from `bin/cutout/sdk.py` to avoid drift.

RULES
- Canonical terms only: SceneScript, Element, Keyframe, BrandStyle, Beat, Animatic Clip.
- Do NOT duplicate helper logic outside sdk.py.
- Use pydantic for dataclasses; jsonschema for SceneScript validation.
- Constants: VIDEO_W=1280, VIDEO_H=720, FPS=30, SAFE_MARGINS_PX=64, MAX_WORDS_PER_CARD=12, LINE_HEIGHT=1.1.

TASKS
1) Create `bin/cutout/sdk.py`:
   - Constants & paths: `paths.slug_root(slug)`, `paths.anim_dir(slug)`, `paths.scene_script(slug)`.
   - Pydantic models: `BrandStyle`, `Keyframe`, `Element`, `Scene`, `SceneScript`.
   - Enums/str-literals: AnimType = {"fade_in","fade_out","slide_left","slide_right","slide_up","slide_down","pop","slow_zoom","slow_pan"}.
   - Helpers: `load_style(path="assets/brand/style.yaml") -> BrandStyle`.
2) Add `schema/scenescript.json` with strict keys:
   - scenes[]: id, duration_ms, bg?, audio_cue?, elements[].
   - element types: "text","prop","character","list_step","shape","lower_third","counter".
   - keyframes/actions: t (ms), x, y, scale, rotate, opacity.
3) Add `assets/brand/style.yaml.example` with required keys: colors, fonts, font_sizes {hook,body,lower_third}, safe_margins_px, corner_radius, stroke, shadow, backgrounds, icon_palette.
4) Add `docs/NAMING.md` defining glossary and forbidden aliases (e.g., never use “pecent” or “percentages” instead of defined keys).

SUCCESS CRITERIA
- sdk.py imports and validates without runtime errors.
- jsonschema validates a minimal SceneScript fixture.
- All later prompts import from sdk.py only.

TEST CRITERIA (commands)
python - << 'PY'
from bin.cutout.sdk import VIDEO_W, VIDEO_H, FPS, SAFE_MARGINS_PX
print(VIDEO_W, VIDEO_H, FPS, SAFE_MARGINS_PX)
PY
python - << 'PY'
import json, jsonschema, pathlib
schema = json.load(open('schema/scenescript.json'))
minimal={"slug":"demo","fps":30,"scenes":[{"id":"s1","duration_ms":3000,"elements":[]}]}
jsonschema.validate(minimal, schema)
print('OK')
PY

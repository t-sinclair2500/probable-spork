# Cursor Prompt Library â€” Branded Animatics Pipeline
# Generated: 2025-08-12 06:14:35Z UTC

## CONTEXT TO REVIEW (MANDATORY)
- Read repo_audit_probable_spork_v2.md top sections (Orchestrator, Acceptance).
- Open: conf/global.yaml, conf/render.yaml, conf/blog.yaml, conf/brief.yaml (or brief.md frontâ€‘matter).
- Inspect: bin/run_pipeline.py, bin/assemble_video.py, existing voice/acceptance steps.
- Use centralized names from sdk: SceneScript, Element, Keyframe, BrandStyle, Beat, Animatic Clip.

## WORKING FRAMEWORK â€” THINK â†’ PLAN â†’ APPLY â†’ VERIFY
- THINK: Summarize constraints, dependencies, and risks (â‰¤10 bullets). Reference this promptâ€™s RULES.
- PLAN: List exact files, functions, signatures, schemas; step-by-step edits; rollback.
- APPLY: Implement code, keep diffs small & cohesive; instrument logs.
- VERIFY: Run the Test Criteria commands and paste outputs + a date-stamped changelog at the bottom of the file.

ROLE: Audio sync engineer.

GOAL
- Align scenes to voiceover cues using SRT or word timings.

RULES
- Allow Â±300 ms tolerance per scene.

TASKS
1) `bin/voice_cues.py` reads `voiceovers/<slug>.srt` â†’ writes `data/<slug>/vo_cues.json`.
2) `animatics_generate.py` respects `scene.audio_cue` if present (start/end ms).

SUCCESS CRITERIA
- Scenes that have cues align within Â±300 ms.

TEST CRITERIA
python bin/voice_cues.py --slug demo
python bin/animatics_generate.py --slug demo

## CHANGELOG - Prompt07 Implementation

**Date: 2025-08-12 07:09 UTC**
**Agent: Agent 4** 
**Task: VO Cues & Alignment (Optional)**

### âœ… COMPLETED
- **Created `bin/voice_cues.py`** - Full SRT parser implementation with timing extraction
- **SRT timestamp parsing** - Handles HH:MM:SS,mmm format with millisecond precision
- **Scene-cue mapping** - Maps voiceover cues to scenes with Â±300ms tolerance
- **Audio cue integration** - `animatics_generate.py` now respects `scene.audio_cue` timing
- **Timing adjustments** - Scenes can be adjusted by up to 1 second to align with audio cues
- **Idempotent execution** - Re-running skips if outputs already exist
- **Lock-aware execution** - Uses `single_lock()` context manager
- **System guards** - Calls `guard_system(cfg)` before heavy operations
- **State logging** - Comprehensive logging to `jobs/state.jsonl`
- **Demo content testing** - Successfully tested with demo SceneScript and SRT

### ðŸ”§ TECHNICAL DETAILS
- **SRT parsing**: Regex-based extraction of timing and text from caption files
- **Tolerance handling**: Â±300ms tolerance per scene as specified in requirements
- **Duration adjustment**: Scenes can be stretched/compressed within reasonable bounds
- **Output format**: `data/<slug>/vo_cues.json` with scene timing and cue mapping
- **Integration**: Seamlessly integrates with existing `animatics_generate.py` pipeline

### ðŸ“Š TEST RESULTS
```
âœ“ Voiceover cues generated: /Users/tylersinclair/Documents/GitHub/probable-spork/data/demo/vo_cues.json
âœ“ Loaded voiceover cues for 7 scenes
âœ“ Rendered 7/7 scenes for demo
```

**Status**: âœ… **COMPLETE** â€” All requirements implemented and tested successfully
